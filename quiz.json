{
  "title": "C Programming: Variables and Operators",
  "topic": "Variables",
  "semester": "1",
  "num_questions": 10,
  "questions": [
    {
      "question": "Which of the following correctly declares an unsigned integer variable named 'age' and initializes it to 25?",
      "options": [
        "A) int age = 25u;",
        "B) unsigned age = 25;",
        "C) unsigned int age = 25;",
        "D) Both B and C are correct"
      ],
      "correct_option": 3,
      "time_limit": 60,
      "difficulty": "Easy",
      "language": "C"
    },
    {
      "question": "What will be the output of the following C code snippet? `int a = 5, b = 2; float c = a / b; printf(\"%.2f\", c);`",
      "options": [
        "A) 2.50",
        "B) 2.00",
        "C) 2",
        "D) Compilation Error"
      ],
      "correct_option": 1,
      "time_limit": 90,
      "difficulty": "Medium",
      "explanation": "Integer division (a / b) results in 2. This integer is then assigned to the float 'c', making it 2.0. The format specifier prints it as 2.00.",
      "language": "C"
    },
    {
      "question": "What is the purpose of the `static` keyword when applied to a local variable?",
      "options": [
        "A) It makes the variable accessible from other files.",
        "B) It allocates memory for the variable in the heap.",
        "C) It preserves the variable's value between function calls.",
        "D) It makes the variable constant."
      ],
      "correct_option": 2,
      "time_limit": 90,
      "difficulty": "Medium",
      "language": "C"
    },
    {
      "question": "What is the result of the expression `5 + 2 * 3 - 10 / 5` considering operator precedence?",
      "options": [
        "A) 5",
        "B) 9",
        "C) 2.2",
        "D) 1"
      ],
      "correct_option": 1,
      "time_limit": 75,
      "difficulty": "Easy",
      "explanation": "Multiplication and division have higher precedence. The expression is evaluated as 5 + 6 - 2, which equals 9.",
      "language": "C"
    },
    {
      "question": "A variable declared inside a function is called a:",
      "options": [
        "A) Global variable",
        "B) Static variable",
        "C) External variable",
        "D) Local variable"
      ],
      "correct_option": 3,
      "time_limit": 60,
      "difficulty": "Easy",
      "language": "C"
    },
    {
      "question": "What will be the output of `printf(\"%d\", (char)257);`?",
      "options": [
        "A) 257",
        "B) 1",
        "C) 0",
        "D) -127"
      ],
      "correct_option": 1,
      "time_limit": 120,
      "difficulty": "Hard",
      "explanation": "A signed char typically ranges from -128 to 127. 257 in binary is 100000001. When cast to a char (8 bits), it truncates to 00000001, which is the integer 1.",
      "language": "C"
    },
    {
      "question": "Which of the following is NOT a valid variable name in C?",
      "options": [
        "A) _my_var",
        "B) myVar123",
        "C) 2_start_var",
        "D) MyVar"
      ],
      "correct_option": 2,
      "time_limit": 60,
      "difficulty": "Easy",
      "explanation": "Variable names in C cannot start with a digit.",
      "language": "C"
    },
    {
      "question": "What is the difference between `const int *p` and `int * const p`?",
      "options": [
        "A) No difference, they are identical.",
        "B) The first is a pointer to a constant int; the second is a constant pointer to an int.",
        "C) The first is a constant pointer to an int; the second is a pointer to a constant int.",
        "D) Both declarations are invalid."
      ],
      "correct_option": 1,
      "time_limit": 120,
      "difficulty": "Hard",
      "language": "C"
    },
    {
      "question": "The `sizeof()` operator in C returns the size of a variable or data type in:",
      "options": [
        "A) Bits",
        "B) Millimeters",
        "C) Pixels",
        "D) Bytes"
      ],
      "correct_option": 3,
      "time_limit": 60,
      "difficulty": "Easy",
      "language": "C"
    },
    {
      "question": "Which header file is required to use functions like `malloc()` and `free()`?",
      "options": [
        "A) <stdio.h>",
        "B) <string.h>",
        "C) <stdlib.h>",
        "D) <math.h>"
      ],
      "correct_option": 2,
      "time_limit": 75,
      "difficulty": "Medium",
      "language": "C"
    }
  ]
}
